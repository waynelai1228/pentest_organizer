from typing import List

class Vulnerability:
    def __init__(self, name: str, description: str, resources: List[str], categories: List[str]):
        self.name = name
        self.description = description
        self.resources = resources
        self.categories = categories
    def add_resource(self, resource):
        self.resources.append(resource)
    def remove_resource(self, index):
        if index >= 0 and index < len(self.resources):
            del self.resources[index]
    def add_category(self, category):
        self.categories.append(category)
    def remove_category(self, index):
        if index >= 0 and index < len(self.categories):
            del self.categories[index]
    def modify_description(self, description):
        self.description = description
    def change_name(self, name):
        self.name = name

    def __repr__(self):
        return "Vulnerability: {\n" + \
               "    \"name\": " + "\"" + self.name + "\",\n" + \
               "    \"description\": " + "\""  + self.description + "\",\n" + \
               "    \"resources\": " + repr(self.resources) + ",\n" + \
               "    \"categories\": " + repr(self.categories) + "\n" + \
               "}"

vulnerability = Vulnerability("SQL injection", "injecting SQL from an entry point to be executed", [], ["web", "SQL"])

print(repr(vulnerability))

vulnerability.modify_description("Using an unprotected SQL execute statement, inject SQL syntax so it will get executed in a sink")
vulnerability.add_category("database")

print(repr(vulnerability))

vulnerability.add_resource("https://www.portswigger.net/sql_injection")
vulnerability.remove_category(1)

print(repr(vulnerability))
